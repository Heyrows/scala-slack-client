package com.lunatech.slack.client.api

import com.lunatech.slack.client.models.{ChannelId, ChannelResponse}
import org.scalatest.FlatSpec
import org.scalatest.Matchers._

import scala.concurrent.ExecutionContext.Implicits.global

class ImOpenTest extends FlatSpec {

  it should "parse json to ChannelResponse" in {
    val channelResponse = ChannelResponse(ChannelId("D947RLWRX"))
    val response = SlackClient.jsonToClass[ChannelResponse](json)

    response.isSuccess shouldBe true
    response.get shouldBe channelResponse
  }

  it should "return an error" in {
    val response = SlackClient.jsonToClass[ChannelResponse](error)

    response.isFailure shouldBe true
    response.failed.get.getMessage shouldBe "Error: invalid_auth"
  }

  val error =
    """
      |{
      |    "ok": false,
      |    "error": "invalid_auth"
      |}
    """.stripMargin

  val json =
    """
      | {
      |    "ok": true,
      |    "channel": {
      |        "id": "D947RLWRX"
      |    }
      |}
      |
    """.stripMargin
}
